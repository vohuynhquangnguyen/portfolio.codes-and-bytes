//!
// Minor edits by ian.cox@jmp.com: 07 June 2018 for Ledi
// for use in JMSA11, jmsa12, and jmsa13 collect data for each student measures 6 parts twice


NamesDefaultToHere(1);


addOtherData = Expr(
	self = Current Data Table();
	
	osdTable = New Table("osd", visibility("invisible"),
			Add Rows( 84 ),
	New Script(
		"Add True Values",
		lstTRuth H = {4, 2.9, 2.16, 2.84, 4.4, 3};
		Current Data Table() << New Column( "Standard", numeric, continuous );
		For Each Row( Choose( :Part Number, :Standard = lstTRuth H[:Part Number] ) );
	),
	New Column( "Inspector",
		Character,
		"Nominal",
		Set Values(
			{"Jian P", "Jian P", "Jian P", "Jian P", "Jian P", "Jian P", "Jian P", "Jian P", "Jian P",
			"Jian P", "Jian P", "Jian P", "Hans M", "Hans M", "Hans M", "Hans M", "Hans M", "Hans M",
			"Hans M", "Hans M", "Hans M", "Hans M", "Hans M", "Hans M", "Linda M", "Linda M",
			"Linda M", "Linda M", "Linda M", "Linda M", "Linda M", "Linda M", "Linda M", "Linda M",
			"Linda M", "Linda M", "Ryan D", "Ryan D", "Ryan D", "Ryan D", "Ryan D", "Ryan D", "Ryan D",
			"Ryan D", "Ryan D", "Ryan D", "Ryan D", "Ryan D", "Olivia L", "Olivia L", "Olivia L",
			"Olivia L", "Olivia L", "Olivia L", "Olivia L", "Olivia L", "Olivia L", "Olivia L",
			"Olivia L", "Olivia L", "Ruth H", "Ruth H", "Ruth H", "Ruth H", "Ruth H", "Ruth H",
			"Ruth H", "Ruth H", "Ruth H", "Ruth H", "Ruth H", "Ruth H", "Yuki S", "Yuki S", "Yuki S",
			"Yuki S", "Yuki S", "Yuki S", "Yuki S", "Yuki S", "Yuki S", "Yuki S", "Yuki S", "Yuki S"}
		)
	),
	New Column( "Measurement Number",
		Numeric,
		"Nominal",
		Format( "Best", 10 ),
		Set Values(
			[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
			11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9,
			10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7,
			8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
		)
	),
	New Column( "Part Number",
		Numeric,
		"Nominal",
		Format( "Best", 10 ),
		Set Values(
			[3, 1, 5, 3, 4, 5, 4, 6, 6, 2, 2, 1, 5, 4, 2, 6, 1, 5, 2, 4, 3, 6, 3, 1,
			3, 1, 1, 3, 2, 5, 4, 6, 6, 4, 5, 2, 6, 4, 1, 5, 6, 5, 1, 2, 2, 3, 3, 4,
			1, 3, 1, 2, 6, 5, 5, 4, 6, 2, 3, 4, 5, 3, 1, 3, 2, 6, 4, 6, 4, 2, 5, 1,
			1, 6, 2, 1, 4, 3, 5, 6, 4, 2, 3, 5]
		)
	),
	New Column( "Repeat",
		Numeric,
		"Nominal",
		Format( "Best", 10 ),
		Set Values(
			[1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2,
			1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
			1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2,
			1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2]
		)
	),
	New Column( "Measured Value",
		Numeric,
		"Continuous",
		Format( "Best", 10 ),
		Set Values(
			[1.8, 4, 3, 1.7, 2.2, 2.8, 2.4, 2.7, 3.1, 3, 2.6, 3.9, 4, 3, 2.5, 3, 4,
			4, 3, 2.5, 1.75, 3, 2, 4, 1.7, 3.8, 3.5, 2.5, 3, 3.2, 3.6, 2.9, 2.6, 3.1,
			3, 2.7, 3.5, 2.3, 3.8, 3.2, 2.9, 3, 4, 3.2, 2.8, 1.8, 2.1, 2.6, 4.1, 1.6,
			3.7, 2.6, 3.4, 3.6, 3.7, 3.1, 4.2, 3.1, 1.8, 2.9, 3, 1.3, 2.5, 1.3, 2,
			2.4, 2.5, 2.9, 2.8, 2.5, 3, 4, 2.86, 2.49, 1.95, 3.45, 2.01, 1.7, 3.15,
			2.911, 2.15, 2.44, 1.65, 3.35]
		)
	)
);
	
	self << Concatenate(osdTable, "Append to first table" );
	osdTable << Close Window(No Save);
	self << Delete Scripts( "Add Other Inspectors" );

);


exprLine = Expr(PenColor("Blue"); Line( line1, line2 ); FillColor("Blue"); Transparency(0.1); Polygon( line1, line2 ) );

bbScript = Expr(
	lstMeas[iPart] = nebMEASUREMENT << get;
	iPart++;
	If( iPart == 13,
		nwHOME << close window;
		dtDATA = New Table( "Results",
			add rows( 12 ),
			New Column( "Inspector", character, nominal, set values( lstName ) ),
			New Column( "Measurement Number", numeric, nominal, set values( lstMeasurement ) ),
			New Column( "Part Number", numeric, nominal, set values( lstParts ) ),
			New Column( "Repeat", numeric, nominal, set values( lstRepeats ) ),
			New Column( "Measured Value", numeric, continuous, set values( lstMeas ) )
			);

			
		eval(parse(evalInsert("
		
				dtDATA << new script(
					\!"Add Other Inspectors\!",
					^char(nameexpr(addOtherData))^
				);
		
		")));
	
		dtDATA << new script(
				"Add True Values",
				lstTRuth H = {4, 2.9, 2.16, 2.84, 4.4, 3};
				current data table() << New Column( "Standard", numeric, continuous );
				For Each Row( Choose( :Part Number, :Standard = lstTRuth H[:Part Number] ) );
			);
			
		Throw();
	);
	nebMEASUREMENT << set( . );
	angle = Random Uniform( 0, 2 * Pi() );
	xrand = Random Uniform( -1.5, 1.5 );
	yrand = Random Uniform( -1.5, 1.5 );
	line1 = lstShapes[iPart][1] * Cos( angle ) - lstShapes[iPart][2] * Sin( angle ) + xrand;
	line2 = lstShapes[iPart][1] * Sin( angle ) + lstShapes[iPart][2] * Cos( angle ) + yrand;
	gb1 << delete;
	pb1 << append( gb1 = Graph Box( frame size( 600, 600 ), X Scale( -10, 10 ), Y Scale( -10, 10 ), exprLine ) );
	gb1[axisbox( 1 )] << show major ticks( 0 ) << minor ticks( 0 ) << show labels( 0 ) << inc( 1 ) << show major grid( 1 ) << remove axis label( "X" );
	gb1[axisbox( 2 )] << show major ticks( 0 ) << minor ticks( 0 ) << show labels( 0 ) << inc( 1 ) << show major grid( 1 ) << remove axis label( "Y" );
);

exprGO = Expr(
	nwHOME << set window size( 660, 780 );
	studentName = tebNAME << getText;
	lstShape = List(
		{[-1 - 1 1 1 - 1], [-1 1 1 - 1 - 1]}, 				// area=4
		{[3.6 5.0 5.8 5.4 3.6], [5.0 6.2 5.2 3.6 5.0]}, 	// area=2.9
		{[3.6 5.6 5.2 3.6], [5.4 5.8 4.0 5.4]}, 			// area=2.16...
		{[4.0 5.2 6.0 4.8 4.0], [5.0 6.6 4.8 3.8 5.0]}, 	// area=2.84
		{[1, 4, 5, 2, 1], [1, 1, 2.1, 2.1, 1]},				// area=4.4
		{[1, 3, 2, 1], [1, 1, 4, 1]},						// area=3
		{[-1 - 1 1 1 - 1], [-1 1 1 - 1 - 1]},
		{[3.6 5.0 5.8 5.4 3.6], [5.0 6.2 5.2 3.6 5.0]},
		{[3.6 5.6 5.2 3.6], [5.4 5.8 4.0 5.4]},
		{[4.0 5.2 6.0 4.8 4.0], [5.0 6.6 4.8 3.8 5.0]},
		{[1, 4, 5, 2, 1], [1, 1, 2.1, 2.1, 1]},	
		{[1, 3, 2, 1], [1, 1, 4, 1]}
	);
	lstArea = List( 4, 2.9, 2.16, 2.84, 4.4, 3, 4, 2.9, 2.16, 2.84, 4.4, 3 );
	lstPart = List( 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6 );
	lstRepeat = List( 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2 );
	vecParts = Random Shuffle( 1 :: 12 );
	lstShapes = List();
	lstAreas = List();
	lstParts = List();
	lstMeasurement = List();
	lstMeas = List();
	lstName = List();
	lstRepeats = List();
	For( iVec = 1, iVec <= 12, iVec++,
		lstShapes[iVec] = lstShape[vecParts[iVec]]; 		// coords of shape
		lstAreas[iVec] = lstArea[vecParts[iVec]];	 		// tRuth H
		lstParts[iVec] = lstPart[vecParts[iVec]]; 	 		// part number
		lstName[iVec] = studentName;			 			// student name
		lstMeasurement[iVec] = iVec;			 			// measurement number
	);
	lstRepeats = Repeat( 1, 12 );
	lstFlag = {0, 0, 0, 0, 0, 0};
	For( iPart = 1, iPart <= 12, iPart++,
		If( lstFlag[lstParts[iPart]],
			lstRepeats[iPart]++,
			lstFlag[lstParts[iPart]]++
		)
	);

	iPart = 1;

	angle = Random Uniform( 0, 2 * Pi() );
	xrand = Random Uniform( -1.5, 1.5 );
	yrand = Random Uniform( -1.5, 1.5 );

	line1 = lstShapes[iPart][1] * Cos( angle ) - lstShapes[iPart][2] * Sin( angle ) + xrand;
	line2 = lstShapes[iPart][1] * Sin( angle ) + lstShapes[iPart][2] * Cos( angle ) + yrand;

	tbNAME << delete;
	tebNAME << delete;
	pb1 << append( TextBox("Using the grid squares, estimate the area of each shape that is presented to you. The area of each grid square is 1.0", << setWrap(600)) );
	pb1 << append( SpacerBox(Size(10, 10)) );
	pb1 << append( 
					HListBox(
						tbLABEL = Text Box( "Enter measured value: " ),
						nebMEASUREMENT = Number Edit Box( ., << setFunction(Function({}, bbScript) ), << setTip("Enter a numerical value and press RETURN") )
						);
					);
	pb1 << append( gb1 = Graph Box( frame size( 600, 600 ), X Scale( -10, 10 ), Y Scale( -10, 10 ), exprLine ) );
	gb1[axisbox( 1 )] << show major ticks( 0 ) << minor ticks( 0 ) << show labels( 0 ) << inc( 1 ) << show major grid( 1 ) << remove axis label( "X" );
	gb1[axisbox( 2 )] << show major ticks( 0 ) << minor ticks( 0 ) << show labels( 0 ) << inc( 1 ) << show major grid( 1 ) << remove axis label( "Y" );
);

nwHOME = New Window( "Measurement Systems Analysis Data Simulator",
		tb1 = Text Box( " Area MSA Exercise ", << setWrap(700)),
	spacerBox(Size(10, 10)),
	pb1 = PanelBox(" ",
				LineUpBox(NCol(2),
					tbNAME = Text Box( "   Enter your name: "),
					tebNAME = Text Edit Box("", << setScript(exprGO), << setWidth(150), << setTip("Type your name and press RETURN"))
					)
				);
		);
nwHOME << set window size( 500, 170 );
tb1 << set font style( "Bold Italic" ) << set font size( 20 );
